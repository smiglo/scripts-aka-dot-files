#!/usr/bin/env bash
# vim: fdl=0

# Configure # {{{
export BASH_ALIASES_FROM_CMD=false
if [[ "${BASH_SOURCE[0]}" == "$0" && ! -z $1 ]]; then # {{{
  export BASH_ALIASES_FROM_CMD=true
  if [[ $1 == '--clean' ]]; then # {{{
    shift
    set +f; shopt -s extglob
    rm -f $BASHRC_RUNTIME_PATH/aliases*
  fi # }}}
else
  if [[ $1 == '--clean' ]]; then
    shift
    set +f; shopt -s extglob
    rm -f $BASHRC_RUNTIME_PATH/aliases*
    RCSTUFF_ALIASES_INSTALLED=false
  fi
  if ${RCSTUFF_ALIASES_INSTALLED:-false}; then
    while [[ ! -z $1 ]]; do
      case $1 in
      --env) shift; __aliases_do_env=true;;
      --force | --clean) shift;;
      *) declare -f ___rcstuff_aliases_markup >/dev/null 2>&1 && unset BASH_ALIASES_FROM_CMD && return 0
      esac
      shift
    done
  fi
  export RCSTUFF_ALIASES_INSTALLED=true
  ___rcstuff_aliases_markup() { : ; }
  export -f ___rcstuff_aliases_markup
fi # }}}
install-function() { # START: install-function # {{{
  $BASH_ALIASES_FROM_CMD && return 0
  local doCheck=true
  [[ $1 == --force-yes ]] && doCheck=false && shift
  local tool="$1"
  local add_completion=
  if [[ "$tool" == *:@@* ]]; then
    add_completion="${tool##*:@@}"
    tool="${tool%:@@*}"
    [[ -z $add_completion ]] && add_completion="$tool"
  fi
  $doCheck && [[ $TO_INSTALL != *\ $tool\ * ]] && return 1
  [[ ! -z $add_completion ]] && export COMPLETION_GENERIC_FUNCTIONS+=" ${add_completion//:/ }"
  return 0
}
export -f install-function
# END: install-function # }}}
install-extensions() { # START: install-extensions # {{{
  local ask=true
  [[ $1 == --no-ask ]] && ask=false && shift
  local name="$2"
  local dumpFile="$BASHRC_RUNTIME_PATH/aliases-$name.dump" complFile="$BASHRC_RUNTIME_PATH/aliases.compl" lockDir="$BASHRC_RUNTIME_PATH/.lock-$name.lock"
  $BASH_ALIASES_FROM_CMD && [[ ! -e "$dumpFile" ]] && dumpFile="${dumpFile%.dump}-local.dump"
  if [[ ! -e "$dumpFile" || ! -e "$complFile" ]]; then # {{{
    local i= fi= compl= list= wdir=$1
    if ! $BASH_ALIASES_FROM_CMD; then
      ( ii=0; while ! command mkdir "$lockDir" 2>/dev/null && [[ $ii -lt 6 ]]; do
          sleep 0.5; ii=$(($ii+1))
        done
      )
    fi
    local complOrig="$COMPLETION_GENERIC_FUNCTIONS"
    COMPLETION_GENERIC_FUNCTIONS=""
    for i in $(command cd $wdir; find . -maxdepth 1 -type f \( -name '*.ign' -prune -o -name '*~' -prune -o -print \) | sed 's|^\./||' | sort -n); do # {{{
      fi="$wdir/$i"
      [[ "$(head -n1 $fi)" == "#!"* ]] || { echor "Skipping file [$i] because of missing shebang"; continue; }
      [[ $i =~ ^[0-9]+\..* ]] && i="${i#*.}"
      local ask_i=$ask
      [[ $i == -* ]] && ask_i=true && i=${i#-}
      compl= && list=
      [[ -e $complFile ]] && compl="$(awk '/^'"${fi##*/}"': / {print $2}' "$complFile")"
      if [[ -z $compl ]]; then # {{{
        list+=" $(sed -n 's/^\s*\([a-zA-Z].*\)()\s*{.*# @@\($\|[^:].*\)/\1/p' "$fi")"
        list+=" $(sed -n 's/^\s*function \([a-zA-Z].*\)\(()\)\?\s*{.*# @@\($\|[^:].*\)/\1/p' "$fi")"
        list+=" $(sed -n '/# @@:/s/.*# @@:\s*\([^ ]*\).*/\1/p' "$fi")"
        list+=" $(awk -F'[ =]' '/^alias .*# @@$/ {print $2}' "$fi")"
        list="$(echo $list | tr '\n' ' ')"
        if command grep -q "^# complete" "$fi"; then
          list+=" $(sed -n '/^# complete:/s/^[^:]*://p' "$fi")"
          list="$(echo $list)"
          [[ -z $list ]] && compl=":@@"
        fi
        if [[ ! -z $list ]]; then
          list="$(echo $list | tr '[ :]' '\n' | sort -u | sed '/^\s*^/d' | tr '\n' ':' | sed 's/:$//')"
          compl=":@@:$list"
        fi
        echo "${fi##*/}: ${compl:--}" >>"$complFile" # }}}
      elif [[ $compl == '-' ]]; then # {{{
        compl=""
      fi # }}}
      command grep -q "^# env:" "$fi" && eval "$(sed -n '/# env: /s/# env: \(.*\)/\1/p' "$fi")"
      if install-function $(! $ask_i && echo "--force-yes") "$i$compl"; then # {{{
        if [[ ! -e "$dumpFile" ]]; then
          cat >"$dumpFile" <<-EOF
						#!/usr/bin/env bash
						# vim: fdl=0
						
					EOF
        fi
        {
          echo "#-#-# START: $fi # {{{"
          cat "$fi"
          sed -n '/^# env: /s/# env: \(.*\)/\1/p' "$fi"
          echo "#-#-# END: $fi # }}}"
        } >>"$dumpFile"
      fi # }}}
    done # }}}
    local complNew="$COMPLETION_GENERIC_FUNCTIONS"
    export COMPLETION_GENERIC_FUNCTIONS="$complOrig"
    echo >>"$dumpFile"
    echo "export COMPLETION_GENERIC_FUNCTIONS+=\" $complNew\"" | sed 's/\s\+/ /g' >>"$dumpFile"
    rm -rf "$lockDir"
  fi # }}}
  if [[ -e "$dumpFile" ]]; then # {{{
    if $BASH_ALIASES_FROM_CMD; then # {{{
      for i in $BASH_ALIASES_DUMMY; do
        eval "$i() { :; }; export -f $i"
      done
    fi # }}}
    source "$dumpFile"
  fi # }}}
  if [[ $dumpFile != *'-local.dump' ]]; then
    local name=${2//-/_}
    export ALIASES_TS_${name^^}="$(command stat -c %Y "$dumpFile")"
  fi
}
export -f install-extensions
# END: install-extensions # }}}
# Check ALIASES_MAP # {{{
TO_INSTALL=''
if [[ $ALIASES_MAP == 'NONE' ]]; then
  [[ "${BASH_SOURCE[0]}" == "$0" ]] && exit 0 || return 0
fi
if [[ ! -z $ALIASES_MAP ]]; then # {{{
  a_map=" $ALIASES_MAP "
  if [[ $a_map == *\ BASIC\ * ]]; then
    a_map="${a_map//' BASIC '/ }"
  fi
  for i in $a_map; do
    case $i in
    -*) TO_INSTALL="${TO_INSTALL// ${i#-} / }";;
    *)  TO_INSTALL+=" $i ";;
    esac
  done
  unset a_map
fi # }}}
TO_INSTALL=" $TO_INSTALL "
declare -F echor >/dev/null 2>&1 || source $HOME/.bashrc --do-min
echorm "To alias: [$TO_INSTALL]"
# }}}
# }}}
# Functions # {{{
if ! ${BASH_ALIASES_FROM_CMD} || ! declare -F $1 >/dev/null 2>&1; then
  install-extensions --no-ask "$SCRIPT_PATH/bash/aliases.d" main
fi
# }}}
# MAIN # {{{
# Source profiles # {{{
if ! declare -F compl-add >/dev/null 2>&1; then
  source "$BASH_ESSENTIALS_PATH/completion.basic" ""
fi
for profi in $BASH_PROFILES_FULL; do
  [[ -e $profi/aliases ]] && source $profi/aliases ''
done # }}}
# Check if not sourced and called with params # {{{
if $BASH_ALIASES_FROM_CMD; then # {{{
  # ALIASES_SILENT=true
  ${ALIASES_SILENT:-true} || echorm "cmd=[$@]"
  cmd=$1 err=0
  shift
  case $cmd in
  --source) # {{{
    for i; do
      if declare -F $i >/dev/null 2>&1; then
        declare -f $i
      else
        err=1
      fi
    done;; # }}}
  *) # {{{
    $cmd "$@"
    err=$?;; # }}}
  esac
  exit $err # }}}
else # {{{
  case $1 in
  --source) # {{{
    shift
    for i; do
      if declare -F $i >/dev/null 2>&1; then
        declare -f $i
      fi
    done;; # }}}
  *) # {{{
    if ${__aliases_do_env:-false} && $IS_MAC; then
      while read __aliases_f; do
        type $__aliases_f | command grep -q ";&" && echo "Function '$__aliases_f() not exported'" >/dev/stderr && continue
        export -f $__aliases_f
      done < <(declare -F | command grep " -f [^_]" | awk '{print $3}')
      unset __aliases_f
    fi
    unset __aliases_do_env;; # }}}
  esac
fi # }}} # }}}
# }}}
# Cleaning # {{{
unset TO_INSTALL i BASH_ALIASES_FROM_CMD ALIASES_AUTO_SUDO_PROMPT
set +f; shopt -s extglob
# }}}
